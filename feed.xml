<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>joshua poehls | silent thought</title>
    <link>http://joshua.poehls.me/post/</link>
    <language>en-us</language>
    <author>Joshua Poehls</author>
    <copyright>Copyright (c) 2014-2015 Joshua Poehls. All rights reserved.</copyright>
    <updated>Mon, 13 Apr 2015 10:43:31 -0600</updated>
    
    <item>
      <title>Resources for PowerShell users</title>
      <link>http://joshua.poehls.me/powershell-resources</link>
      <pubDate>Mon, 13 Apr 2015 10:43:31 -0600</pubDate>
      <author>Joshua Poehls</author>
      <guid>http://joshua.poehls.me/powershell-resources</guid>
      <description>

&lt;p&gt;This is a list of resources that should help anyone interested in PowerShell.&lt;/p&gt;

&lt;h2 id=&#34;editors-and-ides:fc2b22b46776086c164a896f746d9d30&#34;&gt;Editors and IDEs&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;PowerShell ISE

&lt;ul&gt;
&lt;li&gt;Launch by running the &lt;code&gt;ise&lt;/code&gt; command from any PowerShell prompt, or by going to Start | Run&amp;hellip; (or &lt;code&gt;WIN+R&lt;/code&gt;) and entering &lt;code&gt;powershell_ise&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Tips and tricks on the &lt;a href=&#34;http://blogs.technet.com/b/heyscriptingguy/archive/tags/windows+powershell+ise/&#34;&gt;Hey, Scripting Guy! blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Visual Studio via &lt;a href=&#34;http://visualstudiogallery.msdn.microsoft.com/c9eb3ba8-0c59-4944-9a62-6eee37294597&#34;&gt;PowerShell Tools for Visual Studio&lt;/a&gt; (&lt;a href=&#34;https://github.com/adamdriscoll/poshtools&#34;&gt;on GitHub&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Sublime Text via the &lt;a href=&#34;https://github.com/SublimeText/PowerShell&#34;&gt;PowerShell package&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;articles:fc2b22b46776086c164a896f746d9d30&#34;&gt;Articles&lt;/h2&gt;

&lt;p&gt;I few articles I&amp;rsquo;ve written to help you get started.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;My boilerplate for &lt;a href=&#34;http://joshua.poehls.me/powershell-script-boilerplate&#34;&gt;scripts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;My boilerplate for &lt;a href=&#34;http://joshua.poehls.me/powershell-script-module-boilerplate&#34;&gt;script modules&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://joshua.poehls.me/2012/powershell-batch-files-exit-codes&#34;&gt;Deep dive into PowerShell exit codes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://zduck.com/2011/scripting-tips-take-your-powershell-profile-everywhere-with-dropbox/&#34;&gt;How to store your profile in Dropbox&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;videos:fc2b22b46776086c164a896f746d9d30&#34;&gt;Videos&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://channel9.msdn.com/Events/TechEd/NorthAmerica/2013/MDC-B340#fbid=48_8oesWS8j&#34;&gt;Windows PowerShell Unplugged&lt;/a&gt; with Jeffery Snover. &lt;strong&gt;Essential watching for beginners.&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://channel9.msdn.com/Events/TechEd/NorthAmerica/2013/MDC-B400#fbid=48_8oesWS8j&#34;&gt;Advanced Automation Using Windows PowerShell&lt;/a&gt; with Don Jones and Jeffery Snover&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;books:fc2b22b46776086c164a896f746d9d30&#34;&gt;Books&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.amazon.com/gp/product/1935182137/ref=as_li_ss_il?ie=UTF8&amp;amp;camp=1789&amp;amp;creative=390957&amp;amp;creativeASIN=1935182137&amp;amp;linkCode=as2&amp;amp;tag=zduck-20&#34;&gt;Windows PowerShell in Action, Second Edition&lt;/a&gt; by Bruce Payette&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;community-resources:fc2b22b46776086c164a896f746d9d30&#34;&gt;Community Resources&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://blogs.msdn.com/b/powershell/&#34;&gt;Windows PowerShell blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blogs.technet.com/b/heyscriptingguy/&#34;&gt;Hey, Scripting Guy! blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.powershellmagazine.com&#34;&gt;PowerShell Magazine&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://twitter.com/search?q=%23powershell&#34;&gt;#PowerShell&lt;/a&gt; on Twitter&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://stackoverflow.com/questions/tagged/powershell&#34;&gt;PowerShell questions&lt;/a&gt; on StackOverflow&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://reddit.com/r/powershell&#34;&gt;/r/powershell&lt;/a&gt; on Reddit&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Reading Day One journals in Go</title>
      <link>http://joshua.poehls.me/2015/03/dayone-golang-package</link>
      <pubDate>Sat, 14 Mar 2015 10:43:31 -0600</pubDate>
      <author>Joshua Poehls</author>
      <guid>http://joshua.poehls.me/2015/03/dayone-golang-package</guid>
      <description>&lt;p&gt;Here&amp;rsquo;s a little gift for my fellow &lt;a href=&#34;http://dayoneapp.com&#34;&gt;Day One&lt;/a&gt; aficionados who also happen to use &lt;a href=&#34;http://golang.org&#34;&gt;Go&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;A Go package for reading Day One journal files!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&amp;#11089; &lt;a href=&#34;http://github.com/jpoehls/go-dayone&#34;&gt;Source&lt;/a&gt;
&amp;nbsp;
&amp;#11089; &lt;a href=&#34;http://godoc.org/github.com/jpoehls/go-dayone&#34;&gt;Documentation&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It&amp;rsquo;s as easy as:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;import &amp;quot;github.com/jpoehls/go-dayone&amp;quot;

j := dayone.NewJournal(&amp;quot;/Users/{me}/Dropbox/Apps/Day One/Journal.dayone&amp;quot;)

err := j.Read(func(e *Entry, err error) error {
	if err != nil {
		return err
	}

	// Do something with the entry,
	// or return dayone.ErrStopRead to break.
})

if err != nil {
	panic(err)
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I&amp;rsquo;d like to add support for creating and editing entries in the future. Contributions welcome, just hit me up!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Drone Strike Terrorism</title>
      <link>http://joshua.poehls.me/2014/11/drone-strike-terrorism</link>
      <pubDate>Tue, 18 Nov 2014 09:55:27 CST</pubDate>
      <author>Joshua Poehls</author>
      <guid>http://joshua.poehls.me/2014/11/drone-strike-terrorism</guid>
      <description>

&lt;p&gt;Have you read The Intercept&amp;rsquo;s &lt;a href=&#34;https://firstlook.org/theintercept/2014/11/18/media-outlets-continue-describe-unknown-drone-victims-militants/&#34;&gt;article on US drone strikes&lt;/a&gt; and the media&amp;rsquo;s coverage of them in the US? If you are an American, you should.&lt;/p&gt;

&lt;p&gt;Let me be clear; I&amp;rsquo;m horrified. There is so much that is completely wrong here that it is hard to begin.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://firstlook.org/theintercept/2014/11/18/media-outlets-continue-describe-unknown-drone-victims-militants/&#34;&gt;Read the article.&lt;/a&gt; Read it twice.&lt;/p&gt;

&lt;h2 id=&#34;on-target-selection:d62b6f9184d6cab15beaa2c65f1dfe59&#34;&gt;On Target Selection&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;It has been more than two years since The New York Times revealed that &amp;ldquo;Mr. Obama embraced a disputed method for counting civilian casualties&amp;rdquo; of his drone strikes which &amp;ldquo;in effect &lt;strong&gt;counts all military-age males in a strike zone as combatants &amp;hellip; . unless there is explicit intelligence posthumously proving them innocent&lt;/strong&gt;.&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Shoot first, ask questions later. Except nobody is asking questions.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&amp;hellip; targeting decisions can even be made by &lt;strong&gt;nothing more than metadata analysis&lt;/strong&gt; and SIM card use.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;We don&amp;rsquo;t want the NSA even &lt;em&gt;storing&lt;/em&gt; our own metadata. How would you like them to assassinate based solely on that metadata? Oh, and if they do that by blowing up your whole family, so be it.&lt;/p&gt;

&lt;p&gt;Remember, &amp;ldquo;targeting decisions&amp;rdquo; means capital punishment. And not just for the intended target but also for a wide margin of collateral damage. &lt;a href=&#34;http://www.thebureauinvestigates.com/2014/10/16/only-4-of-drone-victims-in-pakistan-named-as-al-qaeda-members/&#34;&gt;Far less than half of drone casualities are confirmed militants&lt;/a&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The &lt;strong&gt;tactic of drone-killing first responders and rescuers&lt;/strong&gt; who come to the scene of drone attacks or even mourners at funerals of drone victims&amp;hellip;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Read that again.&lt;/p&gt;

&lt;h2 id=&#34;on-public-perception:d62b6f9184d6cab15beaa2c65f1dfe59&#34;&gt;On Public Perception&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;&amp;hellip;if a drone missile killed an innocent adult male civilian, such as a vegetable vender or a fruit seller, the victim&amp;rsquo;s long hair and beard would be enough to stereotype him as a militant.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Sorry, we&amp;rsquo;re too busy being &lt;a href=&#34;http://www.newstatesman.com/culture/2014/11/shirtgate-newflash-wearing-terrible-shirt-doesnt-make-you-terrible-person&#34;&gt;offended by the t-shirts people wear&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;on-psychological-effects:d62b6f9184d6cab15beaa2c65f1dfe59&#34;&gt;On Psychological Effects&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;A 2012 report from Stanford and NYU Law School clinics, &amp;ldquo;Living Under Drones,&amp;rdquo; documented that &amp;ldquo;US drone strike policies cause considerable and under-accounted-for harm to the daily lives of ordinary civilians, beyond death and physical injury&amp;rdquo; – specifically, they &amp;ldquo;hover twenty-four hours a day over communities in northwest Pakistan, striking homes, vehicles, and public spaces without warning. Their presence terrorizes men, women, and children, giving rise to anxiety and psychological trauma among civilian communities.&amp;rdquo;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Being attacked by a drone is not the same as being bombed by a jet. With drones, there is typically a much longer prelude to violence. Above North Waziristan, &lt;strong&gt;drones circled for hours, or even days, before striking&lt;/strong&gt;. People below looked up to watch the machines, hovering at about twenty thousand feet, capable of unleashing fire at any moment, like dragon&amp;rsquo;s breath. &amp;ldquo;Drones may kill relatively few, but they terrify many more,&amp;rdquo; Malik Jalal, a tribal leader in North Waziristan, told me. &amp;ldquo;They turned the people into psychiatric patients.&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;on-terrorism:d62b6f9184d6cab15beaa2c65f1dfe59&#34;&gt;On Terrorism&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;The U.S. Joint Chiefs of Staff just released their annual &amp;ldquo;counterterrorism&amp;rdquo; report and it defined &amp;ldquo;terrorism&amp;rdquo; this way:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Terrorism is the unlawful use of violence or threat of violence, often motivated by religious, political, or other ideological beliefs, to instill fear and coerce governments or societies in pursuit of goals that are usually political.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;center&gt;&amp;mdash;&lt;/center&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Given their intended effects - both physical and psychological - on entire populations, is there any serious doubt that continual, sustained drone warfare in places such as Pakistan and Yemen meet the U.S.&amp;rsquo;s formal definition of &amp;ldquo;terrorism&amp;rdquo; found in its latest strategy document?&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>The MMA Hour - 249 - Renzo Gracie</title>
      <link>http://joshua.poehls.me/2014/10/mma-hour-249-renzo-gracie</link>
      <pubDate>Thu, 02 Oct 2014 15:03:13 CDT</pubDate>
      <author>Joshua Poehls</author>
      <guid>http://joshua.poehls.me/2014/10/mma-hour-249-renzo-gracie</guid>
      <description>&lt;p&gt;&lt;figure &gt;
&lt;a href=&#34;http://www.mmafighting.com/2014/9/30/6872803/the-mma-hour-249-renzo-gracie&#34;&gt;
&lt;img src=&#34;http://joshua.poehls.me/2014/10/mma-hour-249-renzo-gracie/renzo.jpg&#34; alt=&#34;Renzo Gracie on MMA Hour Episode 249&#34; /&gt;
&lt;/a&gt;

&lt;figcaption&gt;
&lt;p&gt;
Renzo Gracie on MMA Hour Episode 249



&lt;/p&gt; 
&lt;/figcaption&gt;

&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;I listened to &lt;a href=&#34;http://www.mmafighting.com/2014/9/30/6872803/the-mma-hour-249-renzo-gracie&#34;&gt;the Renzo interview on MMA Hour&lt;/a&gt; this morning; an amazing interview. &lt;a href=&#34;https://twitter.com/renzograciebjj&#34;&gt;Renzo&lt;/a&gt; seems like a great person and several of his comments really touched me. Lots of great stories and true respect as he talks about various people and competitors. Getting exposed to people like this is one of the reasons I love BJJ. There is a strong sense of honor and respect in the community that I don’t see in my own everyday life. It’s an inspiring influence.&lt;/p&gt;

&lt;p&gt;Just stop reading and &lt;a href=&#34;http://www.mmafighting.com/2014/9/30/6872803/the-mma-hour-249-renzo-gracie&#34;&gt;go listen to it&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;One part that stood out the most to me was when he talked about how in this country (America), “nobody wants to &lt;strong&gt;do&lt;/strong&gt;.”&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:79b51f667639d27990d5e198eed7d0a3:fn2&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:79b51f667639d27990d5e198eed7d0a3:fn2&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; He referenced a story about a woman who was raped in New York. “Fifty-two people heard her scream.” Nobody helped. “Everybody assumed, you gonna take care, not me.”&lt;/p&gt;

&lt;p&gt;In contrast, he told about a time when he was in Brazil driving with his wife and kids and saw a guy hit a woman.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;When he hit her I stopped and I jumped to beat him up. When I get there I had to save him because the mob was lynching him. And this was in the space of ten seconds.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;People jumped out of their cars to get this guy. Just because he hit a woman. Renzo’s wife said, “I can’t believe, you get out to hit him and you drive him home now!” Renzo replied, “you gotta do what is right.”&lt;/p&gt;

&lt;p&gt;When I look at myself I see more of the guy who would drive on by. I want to become the guy who stops to help.&lt;/p&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:79b51f667639d27990d5e198eed7d0a3:fn2&#34;&gt;Skip to around 52 minutes into the interview for this story.
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:79b51f667639d27990d5e198eed7d0a3:fn2&#34;&gt;↩&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>The World&#39;s Loudest Sound</title>
      <link>http://joshua.poehls.me/2014/10/worlds-loudest-sound</link>
      <pubDate>Thu, 02 Oct 2014 14:03:07 CDT</pubDate>
      <author>Joshua Poehls</author>
      <guid>http://joshua.poehls.me/2014/10/worlds-loudest-sound</guid>
      <description>&lt;p&gt;&lt;figure &gt;

&lt;img src=&#34;http://joshua.poehls.me/2014/10/worlds-loudest-sound/krakatoa.jpg&#34; alt=&#34;Krakatoa&#34; /&gt;


&lt;figcaption&gt;
&lt;p&gt;
Krakatoa



&lt;/p&gt; 
&lt;/figcaption&gt;

&lt;/figure&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The sound made by the Krakatoa volcanic eruption in 1883 was so loud it ruptured eardrums of people 40 miles away, travelled around the world four times, and &lt;a href=&#34;http://nautil.us/blog/the-sound-so-loud-that-it-circled-the-earth-four-times&#34;&gt;was clearly heard 3,000 miles away&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This is the most amazing thing you&amp;rsquo;ll read today.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>David Rumsey Map Collection</title>
      <link>http://joshua.poehls.me/2014/09/david-rumsey-map-collection</link>
      <pubDate>Fri, 26 Sep 2014 16:51:06 CDT</pubDate>
      <author>Joshua Poehls</author>
      <guid>http://joshua.poehls.me/2014/09/david-rumsey-map-collection</guid>
      <description>&lt;p&gt;I just hit the cartography jackpot. This collection has well over 37,000 maps in high-resolution glory. I&amp;rsquo;ll see you in a few hours&amp;hellip;&lt;/p&gt;

&lt;p&gt;&lt;figure &gt;
&lt;a href=&#34;http://www.davidrumsey.com/luna/servlet/s/jn8c3p&#34;&gt;
&lt;img src=&#34;http://joshua.poehls.me/2014/09/david-rumsey-map-collection/mountains.jpg&#34; alt=&#34;Comparative Mountain Heights in Germany and Switzerland (1851)&#34; /&gt;
&lt;/a&gt;

&lt;figcaption&gt;
&lt;p&gt;
Comparative Mountain Heights in Germany and Switzerland (1851)



&lt;/p&gt; 
&lt;/figcaption&gt;

&lt;/figure&gt;
&lt;figure &gt;
&lt;a href=&#34;http://www.davidrumsey.com/luna/servlet/s/p6xrhq&#34;&gt;
&lt;img src=&#34;http://joshua.poehls.me/2014/09/david-rumsey-map-collection/ocean-floor.jpg&#34; alt=&#34;Ocean Floors and Land Relief (1976)&#34; /&gt;
&lt;/a&gt;

&lt;figcaption&gt;
&lt;p&gt;
Ocean Floors and Land Relief (1976)



&lt;/p&gt; 
&lt;/figcaption&gt;

&lt;/figure&gt;
&lt;figure &gt;
&lt;a href=&#34;http://www.davidrumsey.com/luna/servlet/s/234evp&#34;&gt;
&lt;img src=&#34;http://joshua.poehls.me/2014/09/david-rumsey-map-collection/london-underground.jpg&#34; alt=&#34;London Underground Transport (1933)&#34; /&gt;
&lt;/a&gt;

&lt;figcaption&gt;
&lt;p&gt;
London Underground Transport (1933)



&lt;/p&gt; 
&lt;/figcaption&gt;

&lt;/figure&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Languages Are Beautiful</title>
      <link>http://joshua.poehls.me/2014/09/languages-are-beautiful</link>
      <pubDate>Fri, 26 Sep 2014 12:52:44 CDT</pubDate>
      <author>Joshua Poehls</author>
      <guid>http://joshua.poehls.me/2014/09/languages-are-beautiful</guid>
      <description>&lt;p&gt;If you ever see me doodling, odds are that I&amp;rsquo;m drawing letters and numbers of some kind. I&amp;rsquo;ve always found alphabets, notations, and writing systems in general to be facinating. Typography is beautiful. Typography in foreign languages, even more so.&lt;/p&gt;

&lt;p&gt;&lt;figure &gt;
&lt;a href=&#34;http://www.zazzle.com/jesus_christ_the_son_of_the_living_god_in_hebrew_canvas-192689088319290932&#34;&gt;
&lt;img src=&#34;http://joshua.poehls.me/2014/09/languages-are-beautiful/jesus.png&#34; alt=&#34;Jesus Christ, the Son of the Living God&#34; /&gt;
&lt;/a&gt;

&lt;figcaption&gt;
&lt;p&gt;
Jesus Christ, the Son of the Living God



&lt;/p&gt; 
&lt;/figcaption&gt;

&lt;/figure&gt;
&lt;figure &gt;
&lt;a href=&#34;http://www.alefbetty.com/shop/poster_red_blocks.html&#34;&gt;
&lt;img src=&#34;http://joshua.poehls.me/2014/09/languages-are-beautiful/red.jpg&#34; alt=&#34;Hebrew Alphabet Poster - Red Blocks&#34; /&gt;
&lt;/a&gt;

&lt;figcaption&gt;
&lt;p&gt;
Hebrew Alphabet Poster - Red Blocks



&lt;/p&gt; 
&lt;/figcaption&gt;

&lt;/figure&gt;
&lt;figure &gt;
&lt;a href=&#34;http://www.alefbetty.com/shop/poster_blue_classic.html&#34;&gt;
&lt;img src=&#34;http://joshua.poehls.me/2014/09/languages-are-beautiful/blue.jpg&#34; alt=&#34;Hebrew Alphabet Poster - Classic Blue&#34; /&gt;
&lt;/a&gt;

&lt;figcaption&gt;
&lt;p&gt;
Hebrew Alphabet Poster - Classic Blue



&lt;/p&gt; 
&lt;/figcaption&gt;

&lt;/figure&gt;
&lt;figure &gt;
&lt;a href=&#34;http://society6.com/johnyunker/see-the-world_print#1=45&#34;&gt;
&lt;img src=&#34;http://joshua.poehls.me/2014/09/languages-are-beautiful/eye.jpg&#34; alt=&#34;See the World by John Yunker&#34; /&gt;
&lt;/a&gt;

&lt;figcaption&gt;
&lt;p&gt;
See the World by John Yunker



&lt;/p&gt; 
&lt;/figcaption&gt;

&lt;/figure&gt;
&lt;figure &gt;
&lt;a href=&#34;http://www.coroflot.com/maltin75/photography&#34;&gt;
&lt;img src=&#34;http://joshua.poehls.me/2014/09/languages-are-beautiful/print.jpg&#34; alt=&#34;Hebrew Calligraphy&#34; /&gt;
&lt;/a&gt;

&lt;figcaption&gt;
&lt;p&gt;
Hebrew Calligraphy



&lt;/p&gt; 
&lt;/figcaption&gt;

&lt;/figure&gt;
&lt;figure &gt;
&lt;a href=&#34;https://www.behance.net/gallery/7250675/Writing-Systems-Poster&#34;&gt;
&lt;img src=&#34;http://joshua.poehls.me/2014/09/languages-are-beautiful/greek.png&#34; alt=&#34;Writing Systems Poster by Emily Law&#34; /&gt;
&lt;/a&gt;

&lt;figcaption&gt;
&lt;p&gt;
Writing Systems Poster by Emily Law



&lt;/p&gt; 
&lt;/figcaption&gt;

&lt;/figure&gt;
&lt;figure &gt;
&lt;a href=&#34;https://www.behance.net/gallery/18750311/Hebrew-Lettering-&#34;&gt;
&lt;img src=&#34;http://joshua.poehls.me/2014/09/languages-are-beautiful/black.jpg&#34; alt=&#34;Hebrew Lettering by Tal Maimon - הגיעו מים עד גועל נפש&#34; /&gt;
&lt;/a&gt;

&lt;figcaption&gt;
&lt;p&gt;
Hebrew Lettering by Tal Maimon - הגיעו מים עד גועל נפש



&lt;/p&gt; 
&lt;/figcaption&gt;

&lt;/figure&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>The NSA Reaches Out</title>
      <link>http://joshua.poehls.me/2014/09/nsa-reaches-out</link>
      <pubDate>Fri, 26 Sep 2014 09:18:41 CDT</pubDate>
      <author>Joshua Poehls</author>
      <guid>http://joshua.poehls.me/2014/09/nsa-reaches-out</guid>
      <description>&lt;p&gt;&lt;iframe width=&#34;100%&#34; height=&#34;150&#34; scrolling=&#34;no&#34; frameborder=&#34;no&#34; src=&#34;https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/162688991&amp;color=2fa3bc&amp;show_artwork=false&#34;&gt;&lt;/iframe&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Anne Neuberger is Special Assistant to NSA Director Michael Rogers and also the Director of the NSA&amp;rsquo;s Commercial Solutions Center.&lt;/p&gt;

&lt;p&gt;The NSA, Neuberger said, has suffered a particularly &amp;ldquo;long and challenging year&amp;rdquo; dealing with the public loss of trust following the Snowden revelations. The agency is reviewing all of its activities to determine how to regain that trust. One change is more open engagement with the public. &amp;ldquo;This presentation is a starting point.&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Anne has a pretty potent family history and she used it to help build sympathy for her position.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Of her eight great-grandparents, seven were murdered at Auschwitz. &amp;ldquo;So my family’s history burned into me a fear of what occurs when the power of a state is turned against its people or other people.&amp;rdquo;&lt;/p&gt;

&lt;p&gt;&amp;ldquo;My family history,&amp;rdquo; she said, &amp;ldquo;instilled in me almost parallel value systems – fear of potential for overreach by government, and belief that sometimes only government, with its military and intelligence, can keep civilians safe. Those tensions shape the way I approach my work each day. I fully believe that the two seemingly contradictory factors can be held in balance. And with your help I think we can define a future where they are.&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The seminar was worth listening to if for no other reason than the novelty of hearing a secretive organization talk publicly about itself. Anne certainly spoke well.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;My call to action for everyone in this audience is get our innovative minds focussed on the full set of problems.&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;How? Anne encouraged people to get involved by attending public hearings that the NSA holds.&lt;/p&gt;

&lt;p&gt;We&amp;rsquo;ve heard time and again that even our senators and representatives don&amp;rsquo;t have access to enough information to inform NSA policies, or even be aware of what those policies are. How can we take an invitation to a public hearing seriously?&lt;/p&gt;

&lt;p&gt;The seminar ended with a fun question and answer segment. One of the questions:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;What is the NSA doing to make the scope of its data collection efforts as transparent as possible, while still achieving its goals w.r.t. national security?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The room erupted in laughter when Anne replied that the FOIA (Freedom of Information Act) was a solution to this.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Earth&#39;s Water is Older Than the Sun</title>
      <link>http://joshua.poehls.me/2014/09/earths-water-is-older-than-the-sun</link>
      <pubDate>Thu, 25 Sep 2014 14:21:31 CDT</pubDate>
      <author>Joshua Poehls</author>
      <guid>http://joshua.poehls.me/2014/09/earths-water-is-older-than-the-sun</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Astronomers have discovered that much of the water on Earth&amp;mdash;and the solar system&amp;mdash;predates the Sun.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This isn&amp;rsquo;t really surprising, right? I mean, it lines right up with the Genesis creation. Still, thinking about things like this blows my mind.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;sup&gt;1&lt;/sup&gt; In the beginning God created the heaven and the earth.
&lt;sup&gt;2&lt;/sup&gt; And the earth was without form, and void; and darkness was upon the face of the deep. And the Spirit of God moved upon the face of the waters.
&lt;sup&gt;3&lt;/sup&gt; And God said, Let there be light: and there was light. &lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:d38baf5a8bc9978a9bedb86fbf13f269:fn1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:d38baf5a8bc9978a9bedb86fbf13f269:fn1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;
&lt;cite&gt;&amp;mdash;&lt;a href=&#34;https://www.biblegateway.com/passage/?search=Genesis&amp;#43;1&amp;amp;version=KJV&#34;&gt;Genesis 1:1-3 (KJV)&lt;/a&gt;&lt;/cite&gt;
&lt;/p&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:d38baf5a8bc9978a9bedb86fbf13f269:fn1&#34;&gt;I&amp;rsquo;m no scholar but I read this as, &amp;ldquo;Let there be light: and there was &lt;em&gt;the Sun&lt;/em&gt;.&amp;rdquo;
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:d38baf5a8bc9978a9bedb86fbf13f269:fn1&#34;&gt;↩&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Starting Sentences With I.E. or E.G.</title>
      <link>http://joshua.poehls.me/2014/09/ie-eg-sentences</link>
      <pubDate>Thu, 25 Sep 2014 13:48:49 CDT</pubDate>
      <author>Joshua Poehls</author>
      <guid>http://joshua.poehls.me/2014/09/ie-eg-sentences</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;A parenthetical statement that is a complete sentence should begin with a capital.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I used to debate this everytime I&amp;rsquo;d use i.e. or e.g. in my writing. Not anymore!&lt;/p&gt;

&lt;p&gt;Right way:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;E.g., this is a proper example.&lt;/p&gt;

&lt;p&gt;I.e., something like this is correct.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Wrong way: &lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:cab3ac98872c724440b0e3a6c62466d0:fn1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:cab3ac98872c724440b0e3a6c62466d0:fn1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;e.g., This is a bad example.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Apparently it is also good practice to &lt;a href=&#34;http://english.stackexchange.com/a/16215&#34;&gt;include the comma&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:cab3ac98872c724440b0e3a6c62466d0:fn1&#34;&gt;Sadly this is how I&amp;rsquo;ve usually written it, except I almost always left off the comma.
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:cab3ac98872c724440b0e3a6c62466d0:fn1&#34;&gt;↩&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Hello World</title>
      <link>http://joshua.poehls.me/2014/09/hello-world</link>
      <pubDate>Thu, 25 Sep 2014 09:58:59 CDT</pubDate>
      <author>Joshua Poehls</author>
      <guid>http://joshua.poehls.me/2014/09/hello-world</guid>
      <description>&lt;p&gt;Welcome to my new blog! &lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:aa77bbfd89a7b0ff10def205b9c08d51:fn1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:aa77bbfd89a7b0ff10def205b9c08d51:fn1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; All of my blogging in the past has been in the form of longer articles, mostly technology related, and mostly trying to teach a tip or trick.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m taking a different approach this time. I&amp;rsquo;ll be posting more random thoughts.
Sharing articles I find interesting. Overall I expect this to feel more like reading my Facebook wall and that&amp;rsquo;s what I&amp;rsquo;m going for. &lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:aa77bbfd89a7b0ff10def205b9c08d51:fn2&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:aa77bbfd89a7b0ff10def205b9c08d51:fn2&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;p&gt;Here goes nothing!&lt;/p&gt;

&lt;table border=&#34;0&#34; width=&#34;100%&#34; style=&#34;font-size: 1.5em&#34; class=&#34;noborder&#34;&gt;
&lt;tr&gt;
&lt;td&gt;Hello World!&lt;/td&gt;
&lt;td style=&#34;text-align: center;&#34;&gt;Hallo Welt!&lt;/td&gt;
&lt;td style=&#34;text-align: right; direction: rtl;&#34;&gt;שלום עולם&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:aa77bbfd89a7b0ff10def205b9c08d51:fn1&#34;&gt;This is no longer the first post as I&amp;rsquo;ve started migrating older content from my blog at &lt;code&gt;zduck.com&lt;/code&gt;.
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:aa77bbfd89a7b0ff10def205b9c08d51:fn1&#34;&gt;↩&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:aa77bbfd89a7b0ff10def205b9c08d51:fn2&#34;&gt;This is my plan to take control of my public content. I&amp;rsquo;ll still share on Facebook and Twitter, but I want to own the canonical version.
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:aa77bbfd89a7b0ff10def205b9c08d51:fn2&#34;&gt;↩&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Go 101: String or Byte Slice?</title>
      <link>http://joshua.poehls.me/2014/04/go-101-string-or-byte-slice</link>
      <pubDate>Wed, 16 Apr 2014 09:58:59 CDT</pubDate>
      <author>Joshua Poehls</author>
      <guid>http://joshua.poehls.me/2014/04/go-101-string-or-byte-slice</guid>
      <description>

&lt;p&gt;One of the first things you&amp;rsquo;ll notice in Go is that two different types are commonly used for representing text. &lt;code&gt;string&lt;/code&gt; and &lt;code&gt;[]byte&lt;/code&gt;. A quick example is the &lt;a href=&#34;http://golang.org/pkg/regexp/#Regexp.FindAll&#34;&gt;regexp package&lt;/a&gt; which has functions for both &lt;code&gt;string&lt;/code&gt; and &lt;code&gt;[]byte&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&#34;what-is-the-difference:c3d0e20736b8b30967b0a5298a41fdb7&#34;&gt;What is the difference?&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;string&lt;/code&gt; is immutable and &lt;code&gt;[]byte&lt;/code&gt; is mutable. Both can contain arbitrary bytes.&lt;/p&gt;

&lt;p&gt;The name &amp;ldquo;string&amp;rdquo; implies unicode text but this is not enforced. Operating on &lt;code&gt;string&lt;/code&gt; is like operating on &lt;code&gt;[]byte&lt;/code&gt;. You are working with bytes not characters.&lt;/p&gt;

&lt;p&gt;They are nearly identical and differ only in mutability. The &lt;a href=&#34;http://golang.org/pkg/strings/&#34;&gt;&lt;code&gt;strings&lt;/code&gt;&lt;/a&gt; and &lt;a href=&#34;http://golang.org/pkg/bytes/&#34;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; packages are nearly identical apart from the type that they use.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Q:&lt;/strong&gt; If strings are just arbitrary bytes, then how do you work with characters?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;A:&lt;/strong&gt; What you are thinking of as a character, Go calls a &lt;a href=&#34;http://golang.org/ref/spec#Rune_literals&#34;&gt;rune&lt;/a&gt;. One way to iterate the characters in a string is to use the &lt;code&gt;for...range&lt;/code&gt; loop. Range will parse the string as UTF-8 and iterate the runes. Read &lt;a href=&#34;http://golang.org/doc/effective_go.html#for&#34;&gt;the &lt;code&gt;for&lt;/code&gt; loop&lt;/a&gt; section of Effective Go for more information.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;when-to-use-string:c3d0e20736b8b30967b0a5298a41fdb7&#34;&gt;When to use &lt;code&gt;string&lt;/code&gt;?&lt;/h2&gt;

&lt;p&gt;Ask not when to use &lt;code&gt;string&lt;/code&gt; but rather, when to use &lt;code&gt;[]byte&lt;/code&gt;. Always start with &lt;code&gt;string&lt;/code&gt; and switch to &lt;code&gt;[]byte&lt;/code&gt; when justified.&lt;/p&gt;

&lt;h2 id=&#34;when-to-use-byte:c3d0e20736b8b30967b0a5298a41fdb7&#34;&gt;When to use &lt;code&gt;[]byte&lt;/code&gt;?&lt;/h2&gt;

&lt;p&gt;Use &lt;code&gt;[]byte&lt;/code&gt; when you need to make many changes to a string. Since &lt;code&gt;string&lt;/code&gt; is immutable, any change will allocate a new &lt;code&gt;string&lt;/code&gt;. You can get better performance by using &lt;code&gt;[]byte&lt;/code&gt; and avoiding the allocations.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;C# perspective: &lt;code&gt;[]byte&lt;/code&gt; is to &lt;a href=&#34;http://msdn.microsoft.com/en-us/library/system.text.stringbuilder(v=vs.110).aspx&#34;&gt;&lt;code&gt;System.StringBuilder&lt;/code&gt;&lt;/a&gt; as &lt;code&gt;string&lt;/code&gt; is to &lt;a href=&#34;http://msdn.microsoft.com/en-us/library/system.string(v=vs.110).aspx&#34;&gt;&lt;code&gt;System.String&lt;/code&gt;&lt;/a&gt; when it comes to performance.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Even if your code isn&amp;rsquo;t directly manipulating the string, you may want to use &lt;code&gt;[]byte&lt;/code&gt; if you are using packages which require it so you can avoid the conversion.&lt;/p&gt;

&lt;p&gt;Converting to and from &lt;code&gt;[]byte&lt;/code&gt; is easy. Just remember that each conversion creates a copy of the value.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;s := &amp;quot;some string&amp;quot;
b := []byte(s) // convert string -&amp;gt; []byte
s2 := string(b) // convert []byte -&amp;gt; string
&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote&gt;
&lt;p&gt;Converting to/from &lt;code&gt;string&lt;/code&gt; and &lt;code&gt;[]byte&lt;/code&gt; copies the entire value. Using lots of type conversions in your code is typically a warning sign that you need to reevaluate the types you are using. You want to minimize conversions both for performance and clean code.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;more-about-strings:c3d0e20736b8b30967b0a5298a41fdb7&#34;&gt;More about strings&lt;/h2&gt;

&lt;p&gt;The Go blog has posted in detail about &lt;a href=&#34;http://blog.golang.org/strings&#34;&gt;strings, bytes, runes, and characters in Go&lt;/a&gt;. You should definitely read that post to fully understand the topic.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Update:&lt;/strong&gt; Thanks to &lt;a href=&#34;https://twitter.com/mholt6&#34;&gt;@mholt6&lt;/a&gt; for reviewing the post and helping improve it!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Go 101: Methods on Pointers vs. Values</title>
      <link>http://joshua.poehls.me/2014/04/go-101-methods-on-pointers-vs-values</link>
      <pubDate>Mon, 14 Apr 2014 09:58:59 CDT</pubDate>
      <author>Joshua Poehls</author>
      <guid>http://joshua.poehls.me/2014/04/go-101-methods-on-pointers-vs-values</guid>
      <description>&lt;p&gt;Methods can be declared on both pointers and values. The difference is subtle but important.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;type Person struct {
     age int
}

// Method&#39;s receiver is the value, `Person`.
func (p Person) Age() int {
     return p.age
}

// Method&#39;s receiver is a pointer, `*Person`.
func (p *Person) SetAge(age int) {
     p.age = age
}
&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote&gt;
&lt;p&gt;In reality, you&amp;rsquo;d only define getter and setter functions like this if you needed to implement additional logic. In an example like this you&amp;rsquo;d just make the &lt;code&gt;Age&lt;/code&gt; field public.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This is how you define getter and setter functions in Go. Notice that we defined the &lt;code&gt;Age()&lt;/code&gt; function on the value but &lt;code&gt;SetAge()&lt;/code&gt; on the pointer (i.e. &lt;code&gt;*Person&lt;/code&gt;). This is important.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Go always passes by value.&lt;/strong&gt; Function parameters are  always passed by copying them as opposed to passing a reference. (&lt;a href=&#34;http://golang.org/doc/faq#pass_by_value&#34;&gt;Read more.&lt;/a&gt;)&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Even pointers are technically passed by value. The memory address is copied, the value it points to is &lt;em&gt;not&lt;/em&gt; copied.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Here is the &lt;em&gt;wrong&lt;/em&gt; way to define &lt;code&gt;SetAge&lt;/code&gt;. Let&amp;rsquo;s see what happens.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;func (p Person) SetAge(age int) {
     p.age = age
}

p := Person{}
p.SetAge(10)
fmt.Printf(&amp;quot;Age: %v&amp;quot;, p.Age()) // Age: 0
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;http://play.golang.org/p/CJZfqBrAIC&#34;&gt;&amp;#9654; Run it.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Notice that the output is &lt;code&gt;0&lt;/code&gt; instead of &lt;code&gt;10&lt;/code&gt;? This is &amp;lsquo;pass by value&amp;rsquo; in action.&lt;/p&gt;

&lt;p&gt;Calling &lt;code&gt;p.SetAge(10)&lt;/code&gt; passes a copy of &lt;code&gt;p&lt;/code&gt; to the &lt;code&gt;SetAge&lt;/code&gt; function. &lt;code&gt;SetAge&lt;/code&gt; sets the &lt;code&gt;age&lt;/code&gt; property on the copy of &lt;code&gt;p&lt;/code&gt; that it received which is discarded after the function returns.&lt;/p&gt;

&lt;p&gt;Now let&amp;rsquo;s do it the right way.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;func (p *Person) SetAge(age int) {
     p.age = age
}

p := Person{}
p.SetAge(10)
fmt.Printf(&amp;quot;Age: %v&amp;quot;, p.Age()) // Age: 10
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;http://play.golang.org/p/BbIlSUQBCr&#34;&gt;&amp;#9654; Run it.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;My rule of thumb is this: declare the method on the pointer unless your struct is such that you don&amp;rsquo;t use pointers to it.&lt;/p&gt;

&lt;p&gt;Two reasons:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Performance. Calling a method on a pointer will almost always be faster than copying the value. There may be cases wear the copy is faster but those are edge case.&lt;/li&gt;
&lt;li&gt;Consistency. It is common for at least one of your methods to need a pointer receiver and if any of the type&amp;rsquo;s methods are on the pointer then they all should be. &lt;em&gt;This recommendation is direct from &lt;a href=&#34;http://golang.org/doc/faq#methods_on_values_or_pointers&#34;&gt;the FAQ&lt;/a&gt;.&lt;/em&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href=&#34;http://golang.org/doc/faq#methods_on_values_or_pointers&#34;&gt;Read the FAQ&lt;/a&gt; &amp;ldquo;Should I define methods on values or pointers?&amp;rdquo; for more insight.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Update:&lt;/strong&gt; Thanks to the fine folks on reddit for suggesting some improvements.&lt;br /&gt;
&lt;a href=&#34;http://www.reddit.com/r/golang/comments/23060m/go_101_methods_on_pointers_vs_values/&#34;&gt;Join the discussion on reddit!&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Update 2:&lt;/strong&gt; Here are &lt;a href=&#34;https://github.com/golang/go/wiki/CodeReviewComments#receiver-type&#34;&gt;even more rules of thumb&lt;/a&gt; to help you choose whether to use a value or pointer receiver.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Go 101: Constructors and Overloads</title>
      <link>http://joshua.poehls.me/2014/04/go-conventions-constructors-and-overloads</link>
      <pubDate>Fri, 11 Apr 2014 09:58:59 CDT</pubDate>
      <author>Joshua Poehls</author>
      <guid>http://joshua.poehls.me/2014/04/go-conventions-constructors-and-overloads</guid>
      <description>&lt;p&gt;Go doesn&amp;rsquo;t have constructors in the traditional sense. The convention is to make the zero value useful whenever possible.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;type Person struct {
     Age int
}

// These are equivalent.
// `p1` and `p2` are initialized to the zero value of Person.
// Neither of these are nil.
var p1 Person // type Person
p2 := Person{} // type Person

// You could also use `new` to allocate which returns a pointer
p3 := new(Person) // type *Person
&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote&gt;
&lt;p&gt;It is most common to use the struct initializer. e.g. &lt;code&gt;p := Person{}&lt;/code&gt; or &lt;code&gt;p := &amp;amp;Person{}&lt;/code&gt; if you need the pointer.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Sometimes you want special initialization logic. If your type is named &lt;code&gt;Person&lt;/code&gt; then the convention would be create a function named &lt;code&gt;NewPerson&lt;/code&gt; that returns a pointer to an initialized &lt;code&gt;Person&lt;/code&gt; type.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;func NewPerson(int age) *Person {
     p := Person{age}
     return &amp;amp;p
}

myPerson := NewPerson(10) // type *Person
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Multiple constructors can be implemented by having multiple initializer functions. Go doesn&amp;rsquo;t support function overloads so you will need to name your functions intelligently.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;import &amp;quot;time&amp;quot;

func NewPersonAge(int age) *Person {
     p := Person{age}
     return &amp;amp;p
}

func NewPersonBirthYear(int birthYear) *Person {
     p := Person{time.Now().Year() - birthYear}
     return &amp;amp;p
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;http://golang.org/doc/effective_go.html#composite_literals&#34;&gt;Read more&lt;/a&gt; in Effective Go.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Update:&lt;/strong&gt; Thanks to Joe Shaw for the comments! I&amp;rsquo;ve updated the article with his suggestions.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>PowerShell Script Module Boilerplate</title>
      <link>http://joshua.poehls.me/powershell-script-module-boilerplate</link>
      <pubDate>Sat, 21 Dec 2013 10:43:31 CST</pubDate>
      <author>Joshua Poehls</author>
      <guid>http://joshua.poehls.me/powershell-script-module-boilerplate</guid>
      <description>

&lt;p&gt;One of the things I always look for when getting familiar with a new language or environment is examples of the physical file structure and logical organization of the code. How do you layout your project files? What is idiomatic?&lt;/p&gt;

&lt;p&gt;Unsurprisingly, this isn&amp;rsquo;t always as simple as finding a few open-source projects on GitHub to reference. Believe it or not, there are a lot of pretty unorganized coders out there. I admit to being a bit OCD with my project structures. I like them clean, organized, and consistent.&lt;/p&gt;

&lt;p&gt;In this post I&amp;rsquo;m going to cover my preferred boilerplate for &lt;a href=&#34;http://msdn.microsoft.com/en-us/library/dd878340(v=vs.85).aspx&#34;&gt;PowerShell Script Modules&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Script Modules are about as simple as it gets. Typically you have one or more PS1 or PSM1 files that contain your module&amp;rsquo;s cmdlets. Beyond that you &lt;em&gt;should&lt;/em&gt; have a &lt;a href=&#34;http://msdn.microsoft.com/en-us/library/dd878337(v=vs.85).aspx&#34;&gt;PSD1 manifest&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;fork-this:bf50e637665b449b2d775f5a8ffeb5fd&#34;&gt;Fork this!&lt;/h2&gt;

&lt;p&gt;This entire boilerplate &lt;a href=&#34;http://github.com/jpoehls/powershell-script-module-boilerplate&#34;&gt;is on GitHub&lt;/a&gt;. If you just want a solid starting point, download this repo. If you want to know more, keep reading.&lt;/p&gt;

&lt;h2 id=&#34;file-structure:bf50e637665b449b2d775f5a8ffeb5fd&#34;&gt;File Structure&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;+- src/
| +- source_file.ps1
| +- ...
+- tools/
| +- release.ps1
+- LICENSE
+- README.md
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;src/&lt;/code&gt; contains the PS1, PSM1, PS1XML, and any other source files for the module.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tools/&lt;/code&gt; is where I put any meta scripts for the project. Usually there is just one script here that builds a release version of my module.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;LICENSE&lt;/code&gt; - if your module is open-source, always specify what license you are releasing it under.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;README.md&lt;/code&gt; - always have a README file. Even if it is only a one sentence description. &lt;a href=&#34;http://daringfireball.net/projects/markdown/&#34;&gt;Markdown&lt;/a&gt; is a great format to use for this.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;explicit-exports:bf50e637665b449b2d775f5a8ffeb5fd&#34;&gt;Explicit Exports&lt;/h2&gt;

&lt;p&gt;By default, PowerShell will export all of the functions in your module. I recommend being explicit about this and always specifying which functions should be publically exported. This way it is easy to add private helper functions that are internal to your module without worrying about them being made public accidentally.&lt;/p&gt;

&lt;p&gt;You do this by calling &lt;a href=&#34;http://technet.microsoft.com/en-us/library/hh849736.aspx&#34;&gt;&lt;code&gt;Export-ModuleMember&lt;/code&gt;&lt;/a&gt; at the bottom of your source file. If you have a &lt;code&gt;source.psm1&lt;/code&gt; file that contains a &lt;code&gt;Show-Calendar&lt;/code&gt; function that should be public, you would do something like this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# Show-Calendar.ps1
#
# Show-Calendar will be public.
# Any other functions in this file will be private.

function Show-Calendar {
    # ...
}

Export-ModuleMember -Function Show-Calendar
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;http://msdn.microsoft.com/en-us/library/dd878340(v=vs.85).aspx&#34;&gt;Full example &amp;#8594;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;release-script:bf50e637665b449b2d775f5a8ffeb5fd&#34;&gt;Release Script&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Every project should have a release script.&lt;/strong&gt; You should never be manually building your distributable release. At a minimum my release script will:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Generate the PSD1 manifest for my module.&lt;/li&gt;
&lt;li&gt;Save the manifest into a temporary &lt;code&gt;./dist&lt;/code&gt; folder.&lt;/li&gt;
&lt;li&gt;Copy all of the module source files into &lt;code&gt;./dist&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Add all of the module&amp;rsquo;s source files to a ZIP file ready for me to distribute.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Here is what a simple &lt;code&gt;release.ps1&lt;/code&gt; script might look like.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/jpoehls/powershell-script-module-boilerplate/blob/master/tools/release.ps1&#34;&gt;View on GitHub &amp;#8594;&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;#
.SYNOPSIS
    Generates a manifest for the module
    and bundles all of the module source files
    and manifest into a distributable ZIP file.
#&amp;gt;

[CmdletBinding()]
param(
    [Parameter(Mandatory = $true)]
    [version]$ModuleVersion
)

$ErrorActionPreference = &amp;quot;Stop&amp;quot;

Write-Host &amp;quot;Building release for v$moduleVersion&amp;quot;

$scriptPath = Split-Path -LiteralPath $(if ($PSVersionTable.PSVersion.Major -ge 3) { $PSCommandPath } else { &amp;amp; { $MyInvocation.ScriptName } })

$src = (Join-Path (Split-Path $scriptPath) &#39;src&#39;)
$dist = (Join-Path (Split-Path $scriptPath) &#39;dist&#39;)
if (Test-Path $dist) {
    Remove-Item $dist -Force -Recurse
}
New-Item $dist -ItemType Directory | Out-Null

Write-Host &amp;quot;Creating module manifest...&amp;quot;

$manifestFileName = Join-Path $dist &#39;YourModule.psd1&#39;

# TODO: Tweak the manifest to fit your module&#39;s needs.
New-ModuleManifest `
    -Path $manifestFileName `
    -ModuleVersion $ModuleVersion `
    -Guid fe524c79-95a6-4d02-8e15-30dddeb8c874 `
    -Author &#39;Your Name&#39; `
    -CompanyName &#39;Your Company&#39; `
    -Copyright &#39;(c) $((Get-Date).Year) Your Company. All rights reserved.&#39; `
    -Description &#39;Description of your module.&#39; `
    -PowerShellVersion &#39;3.0&#39; `
    -DotNetFrameworkVersion &#39;4.5&#39; `
    -NestedModules (Get-ChildItem $src -Exclude *.psd1 | % { $_.Name })

Write-Host &amp;quot;Creating release archive...&amp;quot;

# Copy the distributable files to the dist folder.
Copy-Item -Path &amp;quot;$src\*&amp;quot; `
          -Destination $dist `
          -Recurse

# Requires .NET 4.5
[Reflection.Assembly]::LoadWithPartialName(&amp;quot;System.IO.Compression.FileSystem&amp;quot;) | Out-Null

$zipFileName = Join-Path ([System.IO.Path]::GetDirectoryName($dist)) &amp;quot;$([System.IO.Path]::GetFileNameWithoutExtension($manifestFileName))-$ModuleVersion.zip&amp;quot;

# Overwrite the ZIP if it already already exists.
if (Test-Path $zipFileName) {
    Remove-Item $zipFileName -Force
}

$compressionLevel = [System.IO.Compression.CompressionLevel]::Optimal
$includeBaseDirectory = $false
[System.IO.Compression.ZipFile]::CreateFromDirectory($dist, $zipFileName, $compressionLevel, $includeBaseDirectory)

Move-Item $zipFileName $dist -Force
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;version-control:bf50e637665b449b2d775f5a8ffeb5fd&#34;&gt;Version Control&lt;/h2&gt;

&lt;p&gt;Always exclude your &lt;code&gt;./dist&lt;/code&gt; folder from source control. As a rule of thumb, you never want to store the build output of any project in source control.&lt;/p&gt;

&lt;p&gt;Depending on how you plan to release your module, you may prefer to exclude &lt;code&gt;*.psd1&lt;/code&gt; manifest files from source control. This just keeps things clean and enforces that you use your release script to build the distributable.&lt;/p&gt;

&lt;h2 id=&#34;good-examples:bf50e637665b449b2d775f5a8ffeb5fd&#34;&gt;Good Examples&lt;/h2&gt;

&lt;p&gt;Here are a few open-source PowerShell modules that I&amp;rsquo;ve found to be good examples to follow.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/adamdriscoll/PoshInternals&#34;&gt;PoshInternals&lt;/a&gt; by Adam Driscoll&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/psake/psake&#34;&gt;Psake&lt;/a&gt; by James Kovacs&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/jpoehls/poshato&#34;&gt;Poshato&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;!--
## Binary Modules

I use a very similar file structure for [PowerShell Binary Modules][binary_module] but they do introduce more complexity into the release script. I&#39;ll be covering my binary module boilerplate in a future post. 
--&gt;
</description>
    </item>
    
  </channel>
</rss>