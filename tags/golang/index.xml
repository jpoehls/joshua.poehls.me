<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>joshua poehls | silent thought</title>
    <link>http://joshua.poehls.me/tags/golang/index.xml/</link>
    <language>en-us</language>
    <author>Joshua Poehls</author>
    <copyright>Copyright (c) 2014 Joshua Poehls. All rights reserved.</copyright>
    <updated>Sat, 14 Mar 2015 10:43:31 -0600</updated>
    
    <item>
      <title>Reading Day One journals in Go</title>
      <link>http://joshua.poehls.me/2015/03/dayone-golang-package</link>
      <pubDate>Sat, 14 Mar 2015 10:43:31 -0600</pubDate>
      <author>Joshua Poehls</author>
      <guid>http://joshua.poehls.me/2015/03/dayone-golang-package</guid>
      <description>&lt;p&gt;Here&amp;rsquo;s a little gift for my fellow &lt;a href=&#34;http://dayoneapp.com&#34;&gt;Day One&lt;/a&gt; aficionados who also happen to use &lt;a href=&#34;http://golang.org&#34;&gt;Go&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;A Go package for reading Day One journal files!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&amp;#11089; &lt;a href=&#34;http://github.com/jpoehls/go-dayone&#34;&gt;Source&lt;/a&gt;
&amp;nbsp;
&amp;#11089; &lt;a href=&#34;http://godoc.org/github.com/jpoehls/go-dayone&#34;&gt;Documentation&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It&amp;rsquo;s as easy as:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;import &amp;quot;joshua.poehls.me/dayone.v1&amp;quot;

j := dayone.NewJournal(&amp;quot;/Users/{me}/Dropbox/Apps/Day One/Journal.dayone&amp;quot;)

err := j.Read(func(e *Entry, err error) error {
	if err != nil {
		return err
	}

	// Do something with the entry,
	// or return dayone.ErrStopRead to break.
})

if err != nil {
	panic(err)
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Hopefully a trip to the future would reveal a few more features:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Creating and editing entries&lt;/li&gt;
&lt;li&gt;Photo support&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>