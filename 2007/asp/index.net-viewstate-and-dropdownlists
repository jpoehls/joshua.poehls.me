<!DOCTYPE html>
<html lang="en-US">
<head>
<meta charset="utf-8">
<title>joshua poehls | silent thought</title>

<link rel="canonical" href="http://localhost:1313/2007/asp.net-viewstate-and-dropdownlists">
<link href="/feed.xml" rel="alternate" type="application/atom+xml" title="joshua poehls | silent thought">
<meta name="generator" content="Hugo 0.13" />


<link rel="stylesheet" href="/normalize.css">
<link rel="stylesheet" href="/skeleton.css">
<link rel="stylesheet" href="/styles.css">


<link href='http://fonts.googleapis.com/css?family=Merriweather' rel='stylesheet' type='text/css'>
<link href='http://fonts.googleapis.com/css?family=Raleway' rel='stylesheet' type='text/css'>
<link href='http://fonts.googleapis.com/css?family=Inconsolata' rel='stylesheet' type='text/css'>


<meta name="viewport" content="width=device-width, initial-scale=1">


<link rel="apple-touch-icon" href="/touch-icon-iphone.png" /> 
<link rel="apple-touch-icon" sizes="76x76" href="/touch-icon-ipad.png" /> 
<link rel="apple-touch-icon" sizes="120x120" href="/touch-icon-iphone-retina.png" />
<link rel="apple-touch-icon" sizes="152x152" href="/touch-icon-ipad-retina.png" />
<link rel="apple-touch-icon" sizes="180x180" href="/touch-icon-iphone-retinahd.png">

</head>
<body lang="en-US">

<header id="masthead">
	<div class="container">
		<div class="row">
			<div class="twelve columns">
				<h1>
					<small>I am</small>
					<a href="/">Joshua Poehls</a>.
					<small class="contact-link"><a href="/contact">Say hello</a></small>
					<small class="archives-link"><a href="/archives">Archives</a></small>
					<span class="aka">(not so) silent thoughts</span>
				</h1>
			</div>
		</div>
	</div>
</header>



<div class="container">

	

	<section id="posts">
	<div class="row">
<div class="twelve columns">

<article class="post">
    <header>
        <h1>
            
            <a href="/2007/asp.net-viewstate-and-dropdownlists">ASP.NET ViewState and DropDownLists</a>
            
        </h1>
        <p>
            <time datetime="2007-05-15 00:00:00 &#43;0000 UTC" pubdate="pubdate">Tue, May 15, 2007</time>
            <span class="symbol">&#8226;</span>
            <a class="permalink" title="Permalink" href="/2007/asp.net-viewstate-and-dropdownlists">
                <span class="noprint symbol">&#8734;</span>
                <span class="printonly">http://localhost:1313/2007/asp.net-viewstate-and-dropdownlists</span>
            </a>
        </p>
    </header>

    

<p>Did you know ViewState is the root of all evil? Ok, maybe not all evil but certainly 90% of all ASP.NET page bloat. This isn&rsquo;t a strike against .NET, just a sign of how powerful it really is. Any platform that can enable developers to screw up so easily and never realize it has to be very powerful indeed. To borrow a quote from another blog I was reading&#0133;</p>

<blockquote>
<p>ASP.NET is so powerful that it can enable you to be an incredibly bad programmer FASTER THAN EVER.<br />
Don&rsquo;t program by coincidence.</p>
</blockquote>

<h3 id="background:f1b715c7a782221ac895a13c7c7c48d6">Background</h3>

<p>Yesterday I wanted to disable ViewState on one of my DropDownLists. Reason? The drop-down has 3000 items in it. Yes, I know, sick and wrong&hellip; It&rsquo;s bad enough that the drop-down itself is so large but with ViewState every item in the drop-down essentially gets sent to the client twice! How else do you think ViewState remembers what items were in your drop-down when you do a PostBack? It&rsquo;s very handy, but for large lists it can significantly increase the size of the page you are sending to the client.</p>

<p>Just to give you some idea, by disabling ViewState on my drop-down I saved nearly 200 kB. That&rsquo;s significant bandwidth savings, especially for those last couple of dial-up users out there.</p>

<h3 id="problem:f1b715c7a782221ac895a13c7c7c48d6">Problem</h3>

<p>Now that ViewState is disabled for my drop-down I have a few issues:</p>

<ol>
<li>ASP.NET pulls the SelectedValue property of the DropDownList out of ViewState. Guess what? No ViewState == no SelectedValue.</li>
<li>Even though <code>AutoPostBack</code> still works, the <code>SelectedIndexChanged</code> event has lost its firing pin.</li>
<li>My drop-down now loses all of its items after I any post-back occurs. Suprise, it also forgets which items was selected.</li>
</ol>

<h3 id="solution:f1b715c7a782221ac895a13c7c7c48d6">Solution</h3>

<ol>
<li><p>Despite ASP.NET&rsquo;s attempts to deceive you into thinking that everything that matters must be a Property of the control (i.e. <code>SelectedValue</code>)&hellip; ASP.NET is just a fancy wrapper around HTTP and thus any values that are set from the client are received by the server via the <code>Request.Form</code> or <code>Request.QueryString</code>.</p>

<p>Since these are POST-backs, we&rsquo;re interested in <code>Request.Form</code>. Now we just need to know that ASP.NET uses the control&rsquo;s <code>UniqueID</code> property to name the control on the client, this means that <code>Request.Form[myDropDownCtrl.UniqueID]</code> will give me the value of that drop-down list as it was sent from the client. This is the exact same as <code>myDropDownCtrl.SelectedValue</code>. Bingo!</p></li>

<li><p>There are ways to get the <code>SelectedIndexChanged</code> event to fire again but I found an easier work-around for my needs. This also covers #3.</p></li>
</ol>

<pre><code>protected string MySelectedValue
{
 get
 {
   return (ViewState["MySelectedValue"] == null) ? null : ViewState["MySelectedValue"].ToString();
 }
 set
 {
   ViewState["MySelectedValue"] = value;
 }
}

protected void Page_Load(object sender, EventArgs e)
{
 // Check if the selectedValue has changed.
 string selectedValue = Request[myDropDownCtrl.UniqueID];
 if (selectedValue != MySelectedValue)
 {
   // Value has changed, do whatever you would do in the SelectedIndexChanged event here.
 }
 MySelectedValue = selectedValue;

 // TODO: Populate the drop-down control
 PopulateMyDropDownCtrl();

 // set the set the selectedValue on the drop-down
 if (selectedValue != null)
 {
   myDropDownCtrl.Items.FindByValue(selectedValue).Selected = true;
 }
}</code></pre>

<p><em>I didn&rsquo;t actually test this exact code, so&#0133; this code comes as-is, untested and without any guarantees. Let me know if there is a bug and I&rsquo;ll correct it.</em></p>


</article>

<div class="fin symbol">&#10687;</div>

</div>
</div>
	</section>

	

</div>

<footer>
<p>Subscribe to the <a href="/feed.xml">feed</a> to stay up-to-date.</p>
<p>Browse the <a href="/archives">archives</a> if you're bored.</p>
<p>&copy;&nbsp;2014-2015&nbsp;Joshua&nbsp;Poehls.</p>
</footer>

<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-55160531-2', 'auto');
  ga('send', 'pageview');

</script>
<script>document.write('<script src="http://'
        + (location.host || 'localhost').split(':')[0]
		+ ':1313/livereload.js?mindelay=10"></'
        + 'script>')</script></body>
</html>